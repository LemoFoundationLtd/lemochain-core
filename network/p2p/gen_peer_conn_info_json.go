// Code generated by github.com/fjl/gencodec. DO NOT EDIT.

package p2p

import (
	"encoding/json"
)

// MarshalJSON marshals as JSON.
func (p PeerConnInfo) MarshalJSON() ([]byte, error) {
	type PeerConnInfo struct {
		LocalAddr  string `json:"localAddress"`
		RemoteAddr string `json:"remoteAddress"`
		NodeID     string `json:"remoteNodeID"`
	}
	var enc PeerConnInfo
	enc.LocalAddr = p.LocalAddr
	enc.RemoteAddr = p.RemoteAddr
	enc.NodeID = p.NodeID
	return json.Marshal(&enc)
}

// UnmarshalJSON unmarshals from JSON.
func (p *PeerConnInfo) UnmarshalJSON(input []byte) error {
	type PeerConnInfo struct {
		LocalAddr  *string `json:"localAddress"`
		RemoteAddr *string `json:"remoteAddress"`
		NodeID     *string `json:"remoteNodeID"`
	}
	var dec PeerConnInfo
	if err := json.Unmarshal(input, &dec); err != nil {
		return err
	}
	if dec.LocalAddr != nil {
		p.LocalAddr = *dec.LocalAddr
	}
	if dec.RemoteAddr != nil {
		p.RemoteAddr = *dec.RemoteAddr
	}
	if dec.NodeID != nil {
		p.NodeID = *dec.NodeID
	}
	return nil
}
