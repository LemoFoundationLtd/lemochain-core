// Code generated by github.com/fjl/gencodec. DO NOT EDIT.

package node

import (
	"encoding/json"
	"errors"

	"github.com/LemoFoundationLtd/lemochain-go/common/hexutil"
	"github.com/LemoFoundationLtd/lemochain-go/store"
)

var _ = (*txListByAddressMarshaling)(nil)

// MarshalJSON marshals as JSON.
func (t TxListByAddress) MarshalJSON() ([]byte, error) {
	type TxListByAddress struct {
		VTransactions []*store.VTransaction `json:"vTransactions" gencodec:"required"`
		NextVersion   hexutil.Uint64        `json:"next" gencodec:"required"`
	}
	var enc TxListByAddress
	enc.VTransactions = t.VTransactions
	enc.NextVersion = hexutil.Uint64(t.NextVersion)
	return json.Marshal(&enc)
}

// UnmarshalJSON unmarshals from JSON.
func (t *TxListByAddress) UnmarshalJSON(input []byte) error {
	type TxListByAddress struct {
		VTransactions []*store.VTransaction `json:"vTransactions" gencodec:"required"`
		NextVersion   *hexutil.Uint64       `json:"next" gencodec:"required"`
	}
	var dec TxListByAddress
	if err := json.Unmarshal(input, &dec); err != nil {
		return err
	}
	if dec.VTransactions == nil {
		return errors.New("missing required field 'vTransactions' for TxListByAddress")
	}
	t.VTransactions = dec.VTransactions
	if dec.NextVersion == nil {
		return errors.New("missing required field 'next' for TxListByAddress")
	}
	t.NextVersion = uint64(*dec.NextVersion)
	return nil
}
