// Code generated by github.com/fjl/gencodec. DO NOT EDIT.

package node

import (
	"encoding/json"
	"errors"

	"github.com/LemoFoundationLtd/lemochain-go/common/hexutil"
	"github.com/LemoFoundationLtd/lemochain-go/store"
)

var _ = (*txListResMarshaling)(nil)

// MarshalJSON marshals as JSON.
func (t TxListRes) MarshalJSON() ([]byte, error) {
	type TxListRes struct {
		VTransactions []*store.VTransaction `json:"txList" gencodec:"required"`
		Total         hexutil.Uint64        `json:"total" gencodec:"required"`
	}
	var enc TxListRes
	enc.VTransactions = t.VTransactions
	enc.Total = hexutil.Uint64(t.Total)
	return json.Marshal(&enc)
}

// UnmarshalJSON unmarshals from JSON.
func (t *TxListRes) UnmarshalJSON(input []byte) error {
	type TxListRes struct {
		VTransactions []*store.VTransaction `json:"txList" gencodec:"required"`
		Total         *hexutil.Uint64       `json:"total" gencodec:"required"`
	}
	var dec TxListRes
	if err := json.Unmarshal(input, &dec); err != nil {
		return err
	}
	if dec.VTransactions == nil {
		return errors.New("missing required field 'txList' for TxListRes")
	}
	t.VTransactions = dec.VTransactions
	if dec.Total == nil {
		return errors.New("missing required field 'total' for TxListRes")
	}
	t.Total = uint64(*dec.Total)
	return nil
}
