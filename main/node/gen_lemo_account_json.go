// Code generated by github.com/fjl/gencodec. DO NOT EDIT.

package node

import (
	"encoding/json"

	"github.com/LemoFoundationLtd/lemochain-core/common"
)

// MarshalJSON marshals as JSON.
func (l LemoAccount) MarshalJSON() ([]byte, error) {
	type LemoAccount struct {
		Private string         `json:"private"`
		Address common.Address `json:"address"`
	}
	var enc LemoAccount
	enc.Private = l.Private
	enc.Address = l.Address
	return json.Marshal(&enc)
}

// UnmarshalJSON unmarshals from JSON.
func (l *LemoAccount) UnmarshalJSON(input []byte) error {
	type LemoAccount struct {
		Private *string         `json:"private"`
		Address *common.Address `json:"address"`
	}
	var dec LemoAccount
	if err := json.Unmarshal(input, &dec); err != nil {
		return err
	}
	if dec.Private != nil {
		l.Private = *dec.Private
	}
	if dec.Address != nil {
		l.Address = *dec.Address
	}
	return nil
}
