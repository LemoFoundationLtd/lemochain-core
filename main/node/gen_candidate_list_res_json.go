// Code generated by github.com/fjl/gencodec. DO NOT EDIT.

package node

import (
	"encoding/json"
	"errors"

	"github.com/LemoFoundationLtd/lemochain-go/common/hexutil"
)

var _ = (*candidateListResMarshaling)(nil)

// MarshalJSON marshals as JSON.
func (c CandidateListRes) MarshalJSON() ([]byte, error) {
	type CandidateListRes struct {
		CandidateList []*CandidateInfo `json:"candidateList" gencodec:"required"`
		Total         hexutil.Uint32   `json:"total" gencodec:"required"`
	}
	var enc CandidateListRes
	enc.CandidateList = c.CandidateList
	enc.Total = hexutil.Uint32(c.Total)
	return json.Marshal(&enc)
}

// UnmarshalJSON unmarshals from JSON.
func (c *CandidateListRes) UnmarshalJSON(input []byte) error {
	type CandidateListRes struct {
		CandidateList []*CandidateInfo `json:"candidateList" gencodec:"required"`
		Total         *hexutil.Uint32  `json:"total" gencodec:"required"`
	}
	var dec CandidateListRes
	if err := json.Unmarshal(input, &dec); err != nil {
		return err
	}
	if dec.CandidateList == nil {
		return errors.New("missing required field 'candidateList' for CandidateListRes")
	}
	c.CandidateList = dec.CandidateList
	if dec.Total == nil {
		return errors.New("missing required field 'total' for CandidateListRes")
	}
	c.Total = uint32(*dec.Total)
	return nil
}
