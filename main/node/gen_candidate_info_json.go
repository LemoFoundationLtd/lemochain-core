// Code generated by github.com/fjl/gencodec. DO NOT EDIT.

package node

import (
	"encoding/json"
	"errors"
)

// MarshalJSON marshals as JSON.
func (c CandiateInfo) MarshalJSON() ([]byte, error) {
	type CandiateInfo struct {
		CandidateAddress string            `json:"candidate" gencodec:"required"`
		Votes            string            `json:"votes" gencodec:"required"`
		Profile          map[string]string `json:"profile"  gencodec:"required"`
	}
	var enc CandiateInfo
	enc.CandidateAddress = c.CandidateAddress
	enc.Votes = c.Votes
	enc.Profile = c.Profile
	return json.Marshal(&enc)
}

// UnmarshalJSON unmarshals from JSON.
func (c *CandiateInfo) UnmarshalJSON(input []byte) error {
	type CandiateInfo struct {
		CandidateAddress *string           `json:"candidate" gencodec:"required"`
		Votes            *string           `json:"votes" gencodec:"required"`
		Profile          map[string]string `json:"profile"  gencodec:"required"`
	}
	var dec CandiateInfo
	if err := json.Unmarshal(input, &dec); err != nil {
		return err
	}
	if dec.CandidateAddress == nil {
		return errors.New("missing required field 'candidate' for CandiateInfo")
	}
	c.CandidateAddress = *dec.CandidateAddress
	if dec.Votes == nil {
		return errors.New("missing required field 'votes' for CandiateInfo")
	}
	c.Votes = *dec.Votes
	if dec.Profile == nil {
		return errors.New("missing required field 'profile' for CandiateInfo")
	}
	c.Profile = dec.Profile
	return nil
}
