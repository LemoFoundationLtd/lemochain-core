// Code generated by github.com/fjl/gencodec. DO NOT EDIT.

package types

import (
	"encoding/json"
	"math/big"

	"github.com/LemoFoundationLtd/lemochain-go/common/hexutil"
)

var _ = (*candidateMarshaling)(nil)

// MarshalJSON marshals as JSON.
func (c Candidate) MarshalJSON() ([]byte, error) {
	type Candidate struct {
		Votes   *hexutil.Big10 `json:"votes"`
		Profile Profile        `json:"profile"`
	}
	var enc Candidate
	enc.Votes = (*hexutil.Big10)(c.Votes)
	enc.Profile = c.Profile
	return json.Marshal(&enc)
}

// UnmarshalJSON unmarshals from JSON.
func (c *Candidate) UnmarshalJSON(input []byte) error {
	type Candidate struct {
		Votes   *hexutil.Big10 `json:"votes"`
		Profile *Profile       `json:"profile"`
	}
	var dec Candidate
	if err := json.Unmarshal(input, &dec); err != nil {
		return err
	}
	if dec.Votes != nil {
		c.Votes = (*big.Int)(dec.Votes)
	}
	if dec.Profile != nil {
		c.Profile = *dec.Profile
	}
	return nil
}
