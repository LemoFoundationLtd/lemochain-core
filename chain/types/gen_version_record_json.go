// Code generated by github.com/fjl/gencodec. DO NOT EDIT.

package types

import (
	"encoding/json"
	"errors"

	"github.com/LemoFoundationLtd/lemochain-core/common/hexutil"
)

var _ = (*versionRecordMarshaling)(nil)

// MarshalJSON marshals as JSON.
func (v VersionRecord) MarshalJSON() ([]byte, error) {
	type VersionRecord struct {
		Version hexutil.Uint32 `json:"version" gencodec:"required"`
		Height  hexutil.Uint32 `json:"height" gencodec:"required"`
	}
	var enc VersionRecord
	enc.Version = hexutil.Uint32(v.Version)
	enc.Height = hexutil.Uint32(v.Height)
	return json.Marshal(&enc)
}

// UnmarshalJSON unmarshals from JSON.
func (v *VersionRecord) UnmarshalJSON(input []byte) error {
	type VersionRecord struct {
		Version *hexutil.Uint32 `json:"version" gencodec:"required"`
		Height  *hexutil.Uint32 `json:"height" gencodec:"required"`
	}
	var dec VersionRecord
	if err := json.Unmarshal(input, &dec); err != nil {
		return err
	}
	if dec.Version == nil {
		return errors.New("missing required field 'version' for VersionRecord")
	}
	v.Version = uint32(*dec.Version)
	if dec.Height == nil {
		return errors.New("missing required field 'height' for VersionRecord")
	}
	v.Height = uint32(*dec.Height)
	return nil
}
