// Code generated by github.com/fjl/gencodec. DO NOT EDIT.

package types

import (
	"encoding/json"

	"github.com/LemoFoundationLtd/lemochain-go/common"
)

// MarshalJSON marshals as JSON.
func (r RTransaction) MarshalJSON() ([]byte, error) {
	type RTransaction struct {
		Tx       *Transaction   `json:"transaction"`
		GasPayer common.Address `json:"gasPayer"`
	}
	var enc RTransaction
	enc.Tx = r.Tx
	enc.GasPayer = r.GasPayer
	return json.Marshal(&enc)
}

// UnmarshalJSON unmarshals from JSON.
func (r *RTransaction) UnmarshalJSON(input []byte) error {
	type RTransaction struct {
		Tx       *Transaction    `json:"transaction"`
		GasPayer *common.Address `json:"gasPayer"`
	}
	var dec RTransaction
	if err := json.Unmarshal(input, &dec); err != nil {
		return err
	}
	if dec.Tx != nil {
		r.Tx = dec.Tx
	}
	if dec.GasPayer != nil {
		r.GasPayer = *dec.GasPayer
	}
	return nil
}
